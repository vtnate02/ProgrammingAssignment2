nate = "cool"
print(nate)
nate
rm(nate)
y = 9
x = 11
x.1 = 14
array1 = 4, 5, 6
xx <- "Nate"
y+x
xx+y
8945*2342
x/y*x.1
z = x+y
y^6
sqrt(z)
y^(e)
log(y)
exp(y)
log2(y)
abs(x.1)
y^6
#this is a comment
clear()
q(0)
x <- rnorm(100)
mean(x)
matrix(nrow=50, ncol=2)
cbind(x)
sum(x)
library(swirl)
swirl()
head(flags)
dim(flags)
clas(flags)
class(flags)
c;s_list <- lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
clas(cls_list)
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head()
head(flag_colors
)
lapply(flag_Colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <-lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data("iris")
?iris
iris
x <- iris[species=="virginica"]
x <- iris[Species=="virginica"]
x <- iris[Species]
x <- iris[,Species]="virginica"
x <- iris[,Species == "virginica"]
x <- iris[,Species]
x <- iris[Species]
x <- iris[4]
x
x <- iris[5]
x
x <- iris[5] =="virginica"
x
f <- gl(3,10)
f
x <- subset(iris, Species== 'virginica')
x
lapply(mean, x[sepal.length])
lapply(mean, x[Sepal.Length])
lapply(mean, x[,Sepal.Length])
lapply(x[,Sepal.Length], mean)
lapply(x[Sepal.Length], mean)
lapply(x[,1], mean)
sapply(x[,1], mean)
x[,1]
x1 <- x[,1]
sapply(x1, mean)
lapply(x1, mean)
virginica <-subset(iris,Species =='virginica')
virginica
sl <- data.frame(virginica$Sepal.Length)
summary(sl)
sl
mean(sl)
mean(sl$virginica.Sepal.Length)
apply(iris[, 1:4],2,mean)
apply(iris[, 1:4],1,mean)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
abs(mean(split(mtcars, mtcars$cyl)$'4'$hp) - mean(split(mtcars, mtcars$cyl)$'8'$hp))
debug(ls)
swirl()
library(swirl)
swirl()
##Create empty table to house aggregated data
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(fags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors
)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
library(datasets
)
data("iris")
data("iris")
str(iris)
virginica <- subset(iris, Species == 'virginica')
virginica
lapply(virginica$Sepal.Length, mean)
sapply(virginica$Sepal.Length, mean)
apply(iris[,1:4], mean)
iris[,1:4]
iris[,1:4]1
iris[,1:4],1
apply(iris[,1:4],1, mean)
apply()
?apply
apply(iris,1,mean)
colmean(iris[1:4])
colmeans(iris[1:4])
colMeans(iris[1:4])
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
mean(virginica)
mean(virginica[,1])
library(datasets)
data(mtcars)
?mtcars
dim(mtcars)
header(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$Cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg,mtcars$cyl), mean)
split(mtcars$mpg,mtcars$cyl)
split(iris$Sepal.Length,iris$Species)
sapply(split(iris$Petal.Length, iris$Species), mean)
sapply(split(iris$Sepal.Length, iris$Species), mean)
with(mtcars, tapply(mpg,cyl,mean))
?abs
sapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp,mtcars$cyl, mean)
tapply(mtcars$hp,mtcars$cyl, mean, simplify = TRUE)
hp_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_cyl
abs(hp_cyl["4"]-hp_cyl["8"])
mtcars
mtcars["fe"]
mtcars[1=="fe"]
mtcars["fe",]
mtcars["^fe"]
mtcars["^fe",]
mtcars
mtcars("^fe",1)
mtcars["^fe",1]
mtcars["^Fe",1]
mtcars["^Fe",]
grep("^fe", mtcars)
grep("^Fe", mtcars)
grep("Fe", rownames(mtcars))
grep("me", rownames(mtcars))
grep("Me", rownames(mtcars))
mtcars[grep("Fe", rownames(mtcars)),]
mtcars[grep("Fe", rownames(mtcars)),]
mtcars[grep("F", rownames(mtcars)),]
mtcars[grep("^F", rownames(mtcars)),]
split(mtcars[grep("^F", rownames(mtcars)),]$mpg, grep("^F", rownames(mtcars)),]$carb)
fcars <- grep("^F", rownames(mtcars))
fcars
fcars <- mtcars[grep("^F", rownames(mtcars))]
fcars <- mtcars[,grep("^F", rownames(mtcars))]
fcars <- mtcars[grep("^F", rownames(mtcars)),]
fcars
split(fcars$mpg, fcars$carb)
sapply(split(fcars$mpg, fcars$carb), mean)
sapply(split(fcars$mpg, fcars$carb), range)
sapply(split(mtcars$mpg, mtcars$carb), range)
sapply(split(mtcars$mpg, mtcars$carb), summary)
plot(sapply(split(mtcars$mpg, mtcars$carb), summary))
plot(rnorm(100,5), rnorm(50,2))
plot(rnorm(100,5), rnorm(1000,2))
plot(rnorm(100,5), rnorm(100,2))
rnorm(5,10,2)
hist(rnorm(1000,54,12))
hist(rnorm(1000,54,50))
hist(rnorm(1000,100,50))
hist(rnorm(1000,100,10))
grep(c("Ford","Chevy","Jeep"), rownames(mtcars))
american <- c("Ford","Merc")
mapply(mtcars, american, grep)
lapply(mtcars,grep(american))
random <- rnorm(1000000, 548, 100)
hist(random)
?hist
random{10:100}
random[10:100]
mean(random[10:100])
mean(random[10:1000])
abs(548-random[1:100])
abs(548-mean(random[1:100])
)
abs(548-mean(random[1:100]))
abs(548-mean(random[1:1000]))
abs(548-mean(random[100:200]))
abs(548-mean(random[100:2000]))
abs(548-mean(random[100:20000]))
abs(548-mean(random[100:200000]))
abs(548-mean(random[1:200000]))
abs(548-mean(random[1:500000]))
abs(548-mean(random[1:1000000]))
mean(random[,1])
mean(random[1])
mean(random)
rnorm(500, 548L, sd=20L)
random <- rnorm(500, 548L, sd=20L)
random[1:10]
hist[random]
hist(random)
?hist
?rnorm
hist(pnorm(1000,50,25))
hist(pnorm(1000,50,1)
)
?runif
uniform <-runif(1000,0, 20)
hist(uniform)
mean(uniform)
uniform
mtcars
split(rownames(mtcars), mtcars$gear)
split(rownames(mtcars), mtcars$gear==4)
split(rownames(mtcars), mtcars$gear<4)
setwd("c:/users/najones/ProgrammingAssignment2")
setwd("c:/users/nate/ProgrammingAssignment2")
source("cachematrix.R")
library(cachematrix)
library(cachematrix.R)
source(cachematrix.R)
list.files
list.files()
source(cachematrix.R)
source("cachematrix.R")
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
source("cachematrix.R")
cacheSolve(m)
source("cachematrix.R")
cacheSolve(m)
m = makeCacheMatrix(x)
cacheSolve(m)
source("cachematrix.R")
m = makeCacheMatrix(x)
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
cacheSolve(m)
cacheSolve(m)
